// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SSASLogBase.Data;

namespace SSASLogBase.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20191105085530_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("SSASLogBase.Models.Location", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("MessagId");

                    b.HasKey("ID");

                    b.HasIndex("MessagId")
                        .IsUnique();

                    b.ToTable("Location");
                });

            modelBuilder.Entity("SSASLogBase.Models.Message", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<string>("MessageType");

                    b.Property<Guid?>("RefreshID");

                    b.Property<string>("Text");

                    b.HasKey("ID");

                    b.HasIndex("RefreshID");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("SSASLogBase.Models.Refresh", b =>
                {
                    b.Property<Guid>("ID");

                    b.Property<Guid?>("DatabaseID");

                    b.Property<DateTime>("EndTime");

                    b.Property<int>("RefreshStatus");

                    b.Property<int>("RefreshType");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("ID");

                    b.HasIndex("DatabaseID");

                    b.ToTable("Refresh");
                });

            modelBuilder.Entity("SSASLogBase.Models.SSASDatabase", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<Guid?>("SSASServerID");

                    b.HasKey("ID");

                    b.HasIndex("SSASServerID");

                    b.ToTable("Database");
                });

            modelBuilder.Entity("SSASLogBase.Models.SSASServer", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Server");
                });

            modelBuilder.Entity("SSASLogBase.Models.SourceObject", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Column");

                    b.Property<Guid>("LocationId");

                    b.Property<string>("Table");

                    b.HasKey("ID");

                    b.HasIndex("LocationId")
                        .IsUnique();

                    b.ToTable("SourceObject");
                });

            modelBuilder.Entity("SSASLogBase.Models.Location", b =>
                {
                    b.HasOne("SSASLogBase.Models.Message", "Message")
                        .WithOne("Location")
                        .HasForeignKey("SSASLogBase.Models.Location", "MessagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SSASLogBase.Models.Message", b =>
                {
                    b.HasOne("SSASLogBase.Models.Refresh", "Refresh")
                        .WithMany("Messages")
                        .HasForeignKey("RefreshID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SSASLogBase.Models.Refresh", b =>
                {
                    b.HasOne("SSASLogBase.Models.SSASDatabase", "Database")
                        .WithMany("Refreshes")
                        .HasForeignKey("DatabaseID");
                });

            modelBuilder.Entity("SSASLogBase.Models.SSASDatabase", b =>
                {
                    b.HasOne("SSASLogBase.Models.SSASServer", "SSASServer")
                        .WithMany("SSASDatabases")
                        .HasForeignKey("SSASServerID");
                });

            modelBuilder.Entity("SSASLogBase.Models.SourceObject", b =>
                {
                    b.HasOne("SSASLogBase.Models.Location", "Location")
                        .WithOne("SourceObject")
                        .HasForeignKey("SSASLogBase.Models.SourceObject", "LocationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
