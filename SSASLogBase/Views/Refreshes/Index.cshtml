@model IEnumerable<SSASLogBase.Models.Refresh>

@{
    ViewData["Title"] = "Index";
}

<h1>Refresh logs</h1>

@*The timezone selector*@
<div class="float-right">
    <form class="form-inline mb-2">
        <div class="form-group">
            <label for="TZSelector" class="">Timezone&nbsp;</label>
            <select id="TZSelector" class="custom-select form-inline">
                <option value="local">Local</option>
                <option value="UTC" selected>UTC</option>
            </select>
        </div>
    </form>
</div>

<div id="filters">
    @if (ViewBag.filteredDatabaseName != null)
    {
        <span>Filters</span>
        <span class="badge badge-primary">
            Database: @ViewBag.filteredDatabaseName
            <a href="/" class="badge badge-light">X</a>
        </span>
    }
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.StartTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Duration)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Database.SSASServer.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Database.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RefreshStatus)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="time" aria-valuetext="@Html.DisplayFor(modelItem => item.StartTime)">@Html.DisplayFor(modelItem => item.StartTime)</td>
                <td class="time" aria-valuetext="@Html.DisplayFor(modelItem => item.EndTime)">@Html.DisplayFor(modelItem => item.EndTime)</td>
                <td>@Html.DisplayFor(modelItem => item.Duration)</td>
                <td>@Html.DisplayFor(modelItem => item.Database.SSASServer.Name)</td>
                <td>
                    <a href="?d=@item.Database.ID">
                        @Html.DisplayFor(modelItem => item.Database.Name)
                    </a>
                </td>
                <td>@Html.DisplayFor(modelItem => item.RefreshStatus)</td>
                <td>
                    <a href="refreshes/details/@item.ID">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div id="pager">
    @{
        int nextPage = ViewBag.page + 1;
        int prevPage = ViewBag.page - 1;
        string filteredDatabase = "";
        if (ViewBag.filteredDatabaseID != null) { filteredDatabase = "&d=" + ViewBag.filteredDatabaseID; }
    }
    @if (ViewBag.page > 1)
    {
        <a href="/?p=@prevPage@filteredDatabase"><i class="fas fa-angle-left"></i></a>
    }

    Page @ViewBag.page / @ViewBag.numPages
    @if (ViewBag.page < ViewBag.numPages && ViewBag.numPages > 1)
    {
        <a href="/?p=@nextPage@filteredDatabase"><i class="fas fa-angle-right"></i></a>
    }

    <div id="chart_div" class="mt-3"></div>

</div>

@section Scripts {
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
    google.charts.load('current', {'packages':['timeline']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {

        var data = new google.visualization.DataTable();
        data.addColumn({ type: 'string', id: 'Datum' });
        data.addColumn({ type: 'string', id: 'Result' });
        data.addColumn({ type: 'datetime', id: 'Start' });
        data.addColumn({ type: 'datetime', id: 'End' });

        @foreach (var item in Model)
        {
            <text>
                data.addRows([
                [     "@item.StartTime.ToString()"
                    , "@item.RefreshStatus"
                    , new Date(2000, 0, 1, @item.StartTime.Hour, @item.StartTime.Minute, @item.StartTime.Second)
            </text>
                    @if(item.EndTime.Day > item.StartTime.Day || item.EndTime.ToString() == "1/1/0001 12:00:00 AM") {
                    <text>
                        , new Date(2000, 0, 2, @item.EndTime.Hour, @item.EndTime.Minute, @item.EndTime.Second)
                    </text>
                    } else {
                    <text>
                        , new Date(2000, 0, 1, @item.EndTime.Hour, @item.EndTime.Minute, @item.EndTime.Second)
                    </text>
                    }
            <text>
                ]
            ]);
            </text>
        }

      var options = {
          title: "Duration"
          , legend: { position: 'none' }
          , height: 800
      };

      var chart = new google.visualization.Timeline( document.getElementById('chart_div') );

      chart.draw(data, options);
    }
    </script>
}